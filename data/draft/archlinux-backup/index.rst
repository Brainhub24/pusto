Arch Linux backup
-----------------
В июле купил SSD диск и решил, что нужно поставить Arch Linux кошерно с нуля, до этого у 
меня проработала инсталяция около года без переустановки. Казусы случались, но их 
удавалось решить на существующей системе. Ну и хотелось этот новенький чистенький Arch 
забекапить и вообще сделать хорошую регулярную систему бекапов для моих рабочих машин.

До этого я уже занимался бекапами. В одной из версий использовал duplicity__. Последняя 
была основана на ``rsync``, дельты упаковывались в ``tar``. На Debian Testing у меня эта 
система работала регулярно по крону, а в Arch Linux использовал не регулярно вручную, 
хотелось ее переделать.

__ http://duplicity.nongnu.org/

К системе бекапов у меня есть ряд требований:
  - ``latest:`` набор самых важных файлов(``/home, /etc,`` список установленных пакетов и 
    рабочие директории), доступ к которым должен быть очень легким и естественным, то есть 
    обычные команды типа: ``cp, ls, mc`` с этими фалами должны просто работать;
  - ``delta:`` набор изменений, их может быть много, доступ к ним может быть немного 
    сложнее чем к ``latest`` (допускается ``tar``), но желательно чтоб их плодилось не 
    очень много, так как рассматривать дельты после месяца работы бекапов не очень 
    хотелось(в последней версии бекапов у меня был этот недостаток);
  - ``full:`` снимок всей системы, нужно помнить, что делать полный бекап с работающей 
    системы не прикольно, если не предусмотерть этот момент заранее(используя снепшоты из 
    ``Btrfs`` или ``LVM``).

Перед тем как делать систему бекапов, я опять стал смотреть на заточенные для этого 
инструменты. Внимательно смотрел на rdup__,  bup__ и obnam__. Последние две используют 
свои репозитории, в которых реализуют дедупликацию файлов, у ``bup`` формат совместимый с 
``git``, смотрел на них потому что можно было отказаться от разделения на ``latest`` и 
``delta``, ведь они бы сами все красиво раскладывали. Проблема с нестандартными форматами 
репозиториев такая же как и для архивов это то что нельзя просто посмотреть ``ls``. У 
``bup`` есть даже своя FUSE файловая система, но в ней не видны все атрибуты файлов[TODO]. 
``rdup`` можно было бы использовать, но я все таки вернулся к старому способу с ``rsync``. 
В свое время я отказался от ``duplicity`` и от архивов в целом опять же из-за простоты 
доступа к файлам, хоть с обычными архивами умеют работать все, но делать инкрементный 
бекап на архиве невозможно(ну или слишком сложно), а разархивирование нескольких гигов 
данных даже без компрессии операция не самая быстрая.

__ http://www.miek.nl/projects/rdup/
__ https://github.com/bup/bup
__ http://liw.fi/obnam/

От шифрования и архивов я отказался, потому что не храню бекапы в интернете.

К схеме с ``latest & delta`` я пришел потому что **реально** мне важно было сохранить 
последнее состояние системы, а дельта нужна была для возможности посмотреть на старые 
файлы, которые случайно удалил или с какой-то важной информацией, которой нет в последней 
версии. С дельтой проще понять что изменилось в системе, чем если сохранять постоянно 
снимок всех данных, во всех данных пойди быстро найди что изменилось, это можно сделать и 
в принципе довольно быстро, но это лишние действия. Еще заморозкой дельты я решаю вопрос 
данных, которые хорошо бы сохранить и которые хочется почистить в текущей файловой 
системе(т.е. я удаляю файлы, а потом архивирую дельту с определенной меткой). В общем 
схема с ``latest & delta`` мне очень подходит.

Итак что имеется на входе:
  - ноут ThinkPad X230 с SSD 128GB и любимым Arch Linux;
  - неттоп Zotac ZBOX ID83-BE с HDD 500GB(на него еще нужно накатить новый Arch);
  - внешний винчестер на 1TB с USB 3.0``;
  - домашняя WI-FI сеть.

Схема следующая:
  - неттоп по имени **Box**, на нем делается регулярный бекап текущей системы локально в 
    ``"box:/backups/box"``, плюс к нему подключен постоянно внешний винт по имени **Sea** 
    через USB 3.0 и на него идет регулярный слив ``"box:/backups"`` в ``"sea:/backups"``;
  - ноут по имени **Pad**, на нем делается регулярный бекап, а если он находится в 
    домашней сети, то идет слив на неттоп **Box** в ``"box:/backups/pad"``.

Схема вроде ясная, сделано так чтоб к ноуту не нужно было ничего подключать для сохранения 
копии бекапов, а так как в домашней сети очень часто, то достаточно чтоб был включен 
неттоп и я получаю две свежие копии.

На внешний винчестер ставлю тоже Arch(называю его LiveHard, по аналогии с LiveCD), чтоб 
иметь под рукой загрузочный винт с привычным настроенным окружением. Кроме того у меня 
есть еще один внешний винчестер более старый с USB 2.0 из него делаю тоже LiveHard, чтоб 
таскать с собой, ведь первый постоянно весит на неттопе.
